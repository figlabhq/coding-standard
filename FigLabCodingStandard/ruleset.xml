<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="FigLabCodingStandard">
    <description>The FIGLAB coding standard for Laravel applications.</description>

    <!-- Use colors in output -->
    <arg name="colors"/>

    <!-- Show progress of the run -->
    <arg value="p"/>

    <!-- Show sniff codes in all reports -->
    <arg value="s"/>

    <!-- Wider report display -->
    <arg name="report-width" value="160"/>

    <!-- Include all rules from the IxDF Coding Standard -->
    <rule ref="IxDFCodingStandard"/>

    <!-- Custom rules -->
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable.UnusedVariable">
        <exclude-pattern>*/*.blade.php</exclude-pattern>
        <exclude-pattern>./tests*</exclude-pattern>
    </rule>

    <rule ref="Generic.Files.LineLength">
        <exclude-pattern>*/*.blade.php</exclude-pattern>
        <exclude-pattern>./config/*.php</exclude-pattern>
        <exclude-pattern>./database/*.php</exclude-pattern>
        <exclude-pattern>./lang/*.php</exclude-pattern>
        <exclude-pattern>./routes/*.php</exclude-pattern>
        <exclude-pattern>./tests/*.php</exclude-pattern>

        <properties>
            <property name="lineLimit" value="160"/>
            <property name="absoluteLineLimit" value="200"/>
            <property name="ignoreComments" value="true"/>
        </properties>
    </rule>

    <!-- We are not using static closures -->
    <rule ref="SlevomatCodingStandard.Functions.StaticClosure.ClosureNotStatic">
        <exclude-pattern>./</exclude-pattern>
    </rule>

    <rule ref="IxDFCodingStandard.Laravel.NonExistingBladeTemplate">
        <exclude-pattern>./</exclude-pattern>
    </rule>

    <!-- We are not yet ready to commit to classes to be final. -->
    <rule ref="SlevomatCodingStandard.Classes.RequireAbstractOrFinal.ClassNeitherAbstractNorFinal">
        <exclude-pattern>./</exclude-pattern>
    </rule>

    <!-- Only allow in providers, used mostly in Filament providers. -->
    <rule ref="SlevomatCodingStandard.Functions.DisallowNamedArguments.DisallowedNamedArgument">
        <exclude-pattern>./bootstrap/*.php</exclude-pattern>
        <exclude-pattern>*/*Provider.php</exclude-pattern>
    </rule>

    <!-- Only allow in providers, because boot() and register() methods are sometimes empty. -->
    <rule ref="SlevomatCodingStandard.Functions.DisallowEmptyFunction.EmptyFunction">
        <exclude-pattern>*/*Provider.php</exclude-pattern>
    </rule>

    <!-- We will allow some level of complexity in providers, because some of them come from 3rd party packages. -->
    <rule ref="SlevomatCodingStandard.Complexity.Cognitive.ComplexityTooHigh">
        <exclude-pattern>*/*Provider.php</exclude-pattern>
    </rule>
</ruleset>
